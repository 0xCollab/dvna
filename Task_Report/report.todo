Project Review 9th Jan 2020:
    ✔ Project Documentation Review Notes @done(20-01-22 13:01)
        ✔ Ensure that all artefacts are in Github repo @done(20-01-13 10:08)
        ✔ Explain what is DVNA @done(20-01-09 18:16)
        ✔ Add a table decribing the comparison of the various SAST Tools @done(20-01-16 15:50)
        ✔ Add the glossary table to have a term-meaning pair for uncommon terms used in the report or terms that might have a different meaning in general. @done(20-01-09 18:16)
        ✔ Ensure that the problem statement has been solved in broad overview steps @done(20-01-16 15:51)
            ✔ Based on the broad overview steps, document each step further if additional research and analysis activity was undertaken @done(20-01-16 15:50)
            ✔ Explicitly mention the segment of the problem statement being solved by the solution. @done(20-01-16 15:50)
            ✔ Read into the security rules for the various tools, and identify why the vulnerabilities the toold found were found. @done(20-01-16 15:51)
        ✔ Justify the chosen documentation, Define Segments used (and left unused) from the said documentation. @done(20-01-16 15:51)
        ✔ Change ed25519 for ssh access under VM Setup @done(20-01-09 12:30)
        ✔ Change theme to 'Material' from 'ReadTheDocs' for the site. @done(20-01-09 12:05)
        ✔ Added Sunesh and Akash as collaborators in personal fork of DVNA @done(20-01-09 12:17)

Task 3:
    ✔ Commit-based checks to perform code linting for improving code Quality and generate quality report @done(20-02-10 13:22)
    ✔ Generate service bill-of-materials for all dependencies @done(20-02-10 13:22)

Amendments:
    SAST Analysis:
        ✔ Put the comparitive table of the various SAST tools on top @done(20-02-10 14:19)
        ✔ Make separate columns for Dependency vulnerabilities and Web-based vulnerabilities @done(20-02-10 13:58)
    
    DAST Analysis:
        ✔ DAST needs to run in Jenkins Slave - https://wiki.jenkins.io/display/JENKINS/Distributed+builds @done(20-02-12 16:30)
        ☐ DAST ZAP + another tool(w3af) - create a comparison/analysis similar to SAST analysis
    
    Pipeline Structure:
        ☐ Create an image/flowchart-like diagram which depicting the steps of the pipeline with some utility like https://www.draw.io/
